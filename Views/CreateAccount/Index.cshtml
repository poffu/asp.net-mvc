@model LabeledData.Models.TblUserDto

@if (Model == null || Model.UserId == 0)
{
	ViewBag.controller = Html.BeginForm("Index", "CreateAccount", FormMethod.Post, new { @class = "contact100-form validate-form" });
}
else
{
	ViewBag.controller = Html.BeginForm("Index", "EditAccount", FormMethod.Post, new { @class = "contact100-form validate-form" });
}

@{
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-contact100">
	<div class="wrap-contact100">
		@using (ViewBag.controller)
		{
			@Html.AntiForgeryToken()
			@Html.ValidationSummary(true, null)
			@Html.HiddenFor(m => m.UserId)

			@if (Model == null || Model.UserId == 0)
			{
				<span class="contact100-form-title">
					Create Account
				</span>
			}
			else
			{
				<span class="contact100-form-title">
					Edit Account
				</span>
			}

			<div class="text-danger fw-bold text-center mb-4">
				<div>
					@Html.ValidationMessageFor(m => m.LoginName)
				</div>
				<div>
					@Html.ValidationMessageFor(m => m.FullName)
				</div>
				<div>
					@Html.ValidationMessageFor(m => m.Password)
				</div>
				<div>
					@Html.ValidationMessageFor(m => m.PasswordConfirm)
				</div>
				@Html.ValidationMessage("Error")
			</div>

			<div class="wrap-input100 validate-input">
				<span class="label-input100">Username</span>
				@Html.TextBoxFor(m => m.LoginName, new { placeholder = "Enter username", @class = "input100" })
				<span class="focus-input100"></span>
			</div>

			<div class="wrap-input100 validate-input">
				<span class="label-input100">Name</span>
				@Html.TextBoxFor(m => m.FullName, new { placeholder = "Enter name", @class = "input100" })
				<span class="focus-input100"></span>
			</div>
			@if (Model == null || Model.UserId == 0)
			{
				<div class="wrap-input100 input100-select">
					<span class="label-input100">English test</span>
					<div>
						<select name="Rule" class="selection-2">
							<option>--- Select role ---</option>
							<option value="0">Admin</option>
							<option value="1">User</option>
						</select>
						<span class="focus-input100"></span>
					</div>
				</div>
			}
			<div class="wrap-input100 validate-input">
				<span class="label-input100">Password</span>
				@Html.PasswordFor(m => m.Password, new { placeholder = "Enter password", @class = "input100" })
				<span class="focus-input100"></span>
			</div>

			<div class="wrap-input100 validate-input">
				<span class="label-input100">Password confirm</span>
				@Html.PasswordFor(m => m.PasswordConfirm, new { placeholder = "Enter password confirm", @class = "input100" })
				<span class="focus-input100"></span>
			</div>

			<div class="container-contact100-form-btn">
				<div class="wrap-contact100-form-btn">
					<div class="contact100-form-bgbtn"></div>
					<button class="contact100-form-btn">
						<span>
							Submit
							<i class="fa fa-long-arrow-right m-l-7" aria-hidden="true"></i>
						</span>
					</button>
				</div>
			</div>
		}
	</div>
</div>

<div id="dropDownSelect1"></div>

<script>
	$(".selection-2").select2({
		minimumResultsForSearch: 20,
		dropdownParent: $('#dropDownSelect1')
	});
</script>